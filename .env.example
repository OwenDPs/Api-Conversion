# AI API Format Conversion 环境配置文件
# 复制此文件为 .env 并根据需要修改配置

# ================================
# 管理员认证配置
# ================================

# 管理员密码 (默认: admin123)
# 用于登录Web管理界面，仅在数据库中没有设置密码时使用
ADMIN_PASSWORD=admin123

# ================================
# 数据加密配置
# ================================

# API密钥加密密钥
# 32字节的Fernet加密密钥，用于加密存储API密钥
# 示例生成方法: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
# ENCRYPTION_KEY=your-32-byte-base64-encryption-key-here

# 会话加密密钥
# 32字节的随机字符串，用于加密会话cookie
# 示例生成方法: python -c "import secrets; print(secrets.token_hex(32))"
# SESSION_SECRET_KEY=your-64-character-hex-session-secret-key-here

# ================================
# Web服务器配置
# ================================

# Web服务器端口 (默认: 3000)
WEB_PORT=3000

# ================================
# AI服务商特定配置
# ================================

# Anthropic Claude 配置
# Claude模型的最大token数限制 (默认: 32000)
# 这是程序中实际使用的配置，用于限制Claude API请求的max_tokens参数
ANTHROPIC_MAX_TOKENS=32000

# OpenAI Reasoning 模型配置
# OpenAI思考模型的最大完成token数限制 (默认: 32000)
# 用于为OpenAI reasoning模型设置max_completion_tokens的默认值
# 当从Anthropic/Gemini转换到OpenAI格式且目标是思考模型时使用
OPENAI_REASONING_MAX_TOKENS=32000

# ================================
# 思考预算映射配置
# ================================

# OpenAI reasoning_effort 到 Anthropic thinkingBudget 的映射配置
# 用于将 OpenAI 的 low/medium/high 转换为 Anthropic 的具体 token 数值
# 当 OpenAI 格式转 Anthropic 格式时使用
OPENAI_LOW_TO_ANTHROPIC_TOKENS=2048
OPENAI_MEDIUM_TO_ANTHROPIC_TOKENS=8192
OPENAI_HIGH_TO_ANTHROPIC_TOKENS=16384

# OpenAI reasoning_effort 到 Gemini thinkingBudget 的映射配置
# 用于将 OpenAI 的 low/medium/high 转换为 Gemini 的具体 token 数值
# 当 OpenAI 格式转 Gemini 格式时使用
OPENAI_LOW_TO_GEMINI_TOKENS=2048
OPENAI_MEDIUM_TO_GEMINI_TOKENS=8192
OPENAI_HIGH_TO_GEMINI_TOKENS=16384

# Anthropic thinkingBudget 到 OpenAI reasoning_effort 的阈值配置
# 根据 Anthropic 的思考预算范围来确定对应的 OpenAI 思考强度等级
# 当 Anthropic 格式转 OpenAI 格式时使用
ANTHROPIC_TO_OPENAI_LOW_REASONING_THRESHOLD=2048
ANTHROPIC_TO_OPENAI_HIGH_REASONING_THRESHOLD=16384
# 逻辑：<= LOW_THRESHOLD 为 "low"，> HIGH_THRESHOLD 为 "high"，中间为 "medium"

# Gemini thinkingBudget 到 OpenAI reasoning_effort 的阈值配置
# 根据 Gemini 的思考预算范围来确定对应的 OpenAI 思考强度等级
# 当 Gemini 格式转 OpenAI 格式时使用
GEMINI_TO_OPENAI_LOW_REASONING_THRESHOLD=2048
GEMINI_TO_OPENAI_HIGH_REASONING_THRESHOLD=16384
# 逻辑：<= LOW_THRESHOLD 为 "low"，> HIGH_THRESHOLD 为 "high"，中间为 "medium"

# ================================
# 数据库配置
# ================================

# 数据库类型 (sqlite 或 mysql，默认: sqlite)
DATABASE_TYPE=sqlite

# SQLite数据库文件路径 (当DATABASE_TYPE=sqlite时使用，默认: data/channels.db)
DATABASE_PATH=data/channels.db

# MySQL数据库配置 (当DATABASE_TYPE=mysql时使用)
MYSQL_HOST=localhost
MYSQL_PORT=3306
MYSQL_USER=root
MYSQL_PASSWORD=your_mysql_password
MYSQL_DATABASE=api_conversion
# 可选：使用Unix socket连接（优先于TCP连接）
#MYSQL_SOCKET=/run/mysqld/mysqld.sock


# --------------------------------
# PostgreSQL 备份（当DATABASE_TYPE=sqlite时可选启用）
# 用于冗余写入到云端PG并在本地空库时从PG恢复
PG_BACKUP_ENABLED=false
# 推荐使用服务URI（与Render/Cloud服务控制台一致，如：postgres://user:pass@host:5432/dbname）
PG_BACKUP_URI=
# 若未提供URI，则使用以下离散参数
PG_BACKUP_HOST=
PG_BACKUP_PORT=5432
PG_BACKUP_USER=
PG_BACKUP_PASSWORD=
PG_BACKUP_DATABASE=
# SSL 模式：disable|required|verify-ca|verify-full（默认 required）
PG_BACKUP_SSLMODE=require

# ================================
# 日志配置
# ================================

# 日志级别 (DEBUG, INFO, WARNING, ERROR, CRITICAL，默认: WARNING)
# 建议设置为WARNING减少日志输出，只在需要时设置为INFO或DEBUG
LOG_LEVEL=WARNING


# 日志文件路径 (默认: logs/app.log)
LOG_FILE=logs/app.log

# 日志文件保留天数 (默认: 1天)
LOG_MAX_DAYS=1

# ================================
# 使用说明
# ================================

# 1. 复制此文件为 .env: cp .env.example .env
# 2. 根据需要修改上述配置值
# 3. 重启应用程序以使配置生效
# 4. 敏感信息（如密码）请妥善保管，不要提交到版本控制系统

# ================================
# 主要配置说明
# ================================

# ADMIN_PASSWORD: 管理员登录密码，仅在数据库中没有设置密码时使用
# ANTHROPIC_MAX_TOKENS: Claude API请求的最大token数限制，根据需要调整
# WEB_PORT: Web服务器监听端口
# DATABASE_TYPE: 数据库类型，支持sqlite和mysql
# DATABASE_PATH: SQLite数据库文件路径
# MYSQL_*: MySQL数据库连接配置
